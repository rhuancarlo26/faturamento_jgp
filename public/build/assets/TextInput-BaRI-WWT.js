import{w as l,v as d,c as a,o as n,a as p,t as c,g as m,A as _,r as f,b as v,B as g}from"./app-BSpHz-Ss.js";const S=(e,s)=>{const t=e.__vccOpts||e;for(const[o,r]of s)t[o]=r;return t},x={class:"text-sm text-red-600"},V={__name:"InputError",props:{message:{type:String}},setup(e){return(s,t)=>l((n(),a("div",null,[p("p",x,c(e.message),1)],512)),[[d,e.message]])}},y={class:"block text-sm font-medium text-gray-700"},h={key:0},b={key:1},w={__name:"InputLabel",props:{value:{type:String}},setup(e){return(s,t)=>(n(),a("label",y,[e.value?(n(),a("span",h,c(e.value),1)):(n(),a("span",b,[m(s.$slots,"default")]))]))}},B={__name:"TextInput",props:{modelValue:{type:String,required:!0},modelModifiers:{}},emits:["update:modelValue"],setup(e,{expose:s}){const t=_(e,"modelValue"),o=f(null);return v(()=>{o.value.hasAttribute("autofocus")&&o.value.focus()}),s({focus:()=>o.value.focus()}),(r,u)=>l((n(),a("input",{class:"rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500","onUpdate:modelValue":u[0]||(u[0]=i=>t.value=i),ref_key:"input",ref:o},null,512)),[[g,t.value]])}};export{S as _,w as a,B as b,V as c};
